/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    alpha.poly
    {
        nAlphaCorr      3;
        nAlphaSubCycles 4;
        cAlpha          1;

    }

    ".*(rho|rhoFinal)"
    {
        solver          diagonal;
    }

    "(elSigDev|elSigDevFinal)"//kristjan
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-11;
        relTol          0;
    }

    pcorr
    {
        solver          PCG;
        preconditioner
        {
            preconditioner  GAMG;
            tolerance       1e-11;
            relTol          0;
            smoother        DICGaussSeidel;
            nPreSweeps      0;
            nPostSweeps     2;
            nFinestSweeps   2;
            cacheAgglomeration true;
            nCellsInCoarsestLevel 10;
            agglomerator    faceAreaPair;
            mergeLevels     1;
        }
        tolerance       1e-11;
        relTol          0;
        maxIter         100;
    }

    p_rgh
    {
        solver          GAMG;
        tolerance       1e-11;
        relTol          0.01;
        smoother        DIC;
        nPreSweeps      0;
        nPostSweeps     2;
        nFinestSweeps   2;
        cacheAgglomeration true;
        nCellsInCoarsestLevel 10;
        agglomerator    faceAreaPair;
        mergeLevels     1;
    }

    p_rghFinal
    {
        solver          PCG;
        preconditioner
        {
            preconditioner  GAMG;
            tolerance       1e-11;
            relTol          0;
            nVcycles        2;
            smoother        DICGaussSeidel;
            nPreSweeps      2;
            nPostSweeps     2;
            nFinestSweeps   2;
            cacheAgglomeration true;
            nCellsInCoarsestLevel 10;
            agglomerator    faceAreaPair;
            mergeLevels     1;
        }
        tolerance       1e-11;
        relTol          0;
        maxIter         20;
    }

    U
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-8;
        relTol          0.01;
        nSweeps         1;
    }

    "(T|k|B|nuTilda).*"
    {
        solver          smoothSolver;
        smoother        DILUGaussSeidel; //symGaussSeidel
        tolerance       1e-6; //1e-11
        relTol          0.0; //0.01
    }
    "A2.*"
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-05;
        relTol          0;
    }

}

PIMPLE
{
    momentumPredictor no;
    transonic       no;
    nOuterCorrectors 50; // always set the nOuterCorrectors to a very high number (~ 50 to 1000) and control your pimple loop with the residual control
    nCorrectors     1; //Set nCorrectors to a small number (1 to 3) 
    nNonOrthogonalCorrectors 3; //nNonOrthogonalCorr means that you correct the pressure field more often with the new calculated one. This is needed for high non-orthogonal meshes (4 for tet)

// residualControl   
    outerCorrectorResidualControl    
    { //Andrea
     "(T|elSigDev|A2)" { relTol 0.0; tolerance 1e-5; }
     p_rgh { relTol 0.05; tolerance 5e-4; }
    } 

}

relaxationFactors
{
    fields
    {
        p_rgh      0.3;
        p_rghFinal   1;
        T      0.3;
        TFinal          1;
        elSigDev      0.3;
        elSigDevFinal   1;
        A2            0.3;
        A2Final       1.0;
    }
    equations
    {
        "U|k|epsilon|T|elSigDev"     1.0;
        "(U|k|epsilon|T|elSigDev)Final"   1;
    }
}


// ************************************************************************* //
